Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-07-04_오후_1_41_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-07-04_오후_1_41_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-07-04_오후_1_41_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-07-04_오후_1_41_[Changes]/shelved.patch	(revision 1ad42df3e189c2ea6886c4fc83074d4ca4983bf4)
+++ /dev/null	(revision 1ad42df3e189c2ea6886c4fc83074d4ca4983bf4)
@@ -1,381 +0,0 @@
-Index: app/src/main/java/com/example/k_dev_master/memorygame/MemoryGame.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.k_dev_master.memorygame;\r\n\r\n\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.util.Log;\r\nimport android.view.ViewTreeObserver;\r\nimport android.animation.Animator;\r\nimport android.animation.AnimatorListenerAdapter;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.databinding.DataBindingUtil;\r\nimport androidx.recyclerview.widget.GridLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport java.util.Collections;\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\nimport java.util.Vector;\r\n\r\nimport com.example.k_dev_master.R;\r\nimport com.example.k_dev_master.databinding.ActivityMemorygameBinding;\r\n\r\npublic class MemoryGame extends AppCompatActivity {\r\n\r\n    private final long TIME_DISPLAY_STAGE1 = 2000;\r\n    private final long TIME_DISPLAY_STAGE2 = 5000;\r\n    private final long TIME_DISPLAY_STAGE3 = 3000;\r\n    ActivityMemorygameBinding binding;\r\n    private int stageLevel = 0;\r\n    Vector<Card> cards;\r\n    Timer timer;\r\n    private long recordTime = 0;\r\n    private long currTimer = 0;\r\n    private int gameState;\r\n    private static final int GAME_ONGOING = 0;\r\n    private static final int GAME_DONE = 1;\r\n    Vector<Integer> selectedPos;\r\n    // 골라 놓은 카드들 벡터로 저장\r\n\r\n    // count 100ms\r\n    TimerTask tt;\r\n    MemoryGameAdapter adapter;\r\n\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        binding = DataBindingUtil.setContentView(this, R.layout.activity_memorygame);\r\n//        binding.restartBtn.setOnClickListener(view -> recreate());\r\n        GridLayoutManager gridLayoutManager = new GridLayoutManager(this, 4);\r\n        binding.cardViews.setLayoutManager(gridLayoutManager);\r\n        adapter = new MemoryGameAdapter(this);\r\n        binding.cardViews.setAdapter(adapter);\r\n\r\n        gameState = GAME_ONGOING;\r\n        recordTime = 0;\r\n        currTimer = 0;\r\n        stageLevel = 1;\r\n        setTask();\r\n        selectedPos = new Vector<>();\r\n        //비교할 후보들 저장\r\n        addCards();\r\n        adapter.setUpPicture(cards);\r\n        binding.cardLayout.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {\r\n            @Override\r\n            public void onGlobalLayout() {\r\n                int width = binding.cardViews.getWidth() / 4 - 10;\r\n                int height = binding.cardViews.getHeight() / 4 - 10;\r\n                Log.e(\"width\", String.valueOf(width));\r\n                Log.e(\"height\", String.valueOf(height));\r\n                adapter.setLength(width, height);\r\n                // set length\r\n                adapter.notifyDataSetChanged();\r\n                // recycleView alert\r\n                Handler handler = new Handler();\r\n                handler.postDelayed(MemoryGame.this::start, 100); // timer need to be implemented\r\n                binding.cardLayout.getViewTreeObserver().removeOnGlobalLayoutListener(this);\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    RecyclerView.OnItemTouchListener onItemTouchListener = new RecyclerView.OnItemTouchListener() {\r\n        @Override\r\n        public boolean onInterceptTouchEvent(@NonNull RecyclerView recyclerView, @NonNull MotionEvent evt) {\r\n            int action = evt.getAction();\r\n            switch (action) {\r\n                case MotionEvent.ACTION_UP:\r\n                    View child = recyclerView.findChildViewUnder(evt.getX(), evt.getY());\r\n//                    assert child != null;\r\n                    int pos = recyclerView.getChildAdapterPosition(child);\r\n                    // get position of touched and its index of vector\r\n                    Log.e(\"pos\", String.valueOf(pos));\r\n                    View txtView = child.findViewById(R.id.cardTxtView);\r\n                    // 하나의 카드\r\n                    // pictureTxtview 객체 생성\r\n                    int check = cards.get(pos).getCheck();\r\n                    // 그 카드객체 (index of vector)의 check 가져오기\r\n                    if(check == 1) { // 뒤집혔다면, 눌려졌다면,\r\n                        txtView.animate()\r\n                                .rotationYBy(360)\r\n                                .rotationY(90)\r\n                                .setDuration(200) // 카드 보여주는 시간\r\n                                .setListener(new AnimatorListenerAdapter() {\r\n                                    @Override\r\n                                    public void onAnimationEnd(Animator animation) {\r\n                                        txtView.animate()\r\n                                                .rotationYBy(90)\r\n                                                .rotationY(0)\r\n                                                .setDuration(200)\r\n                                                .setListener(new AnimatorListenerAdapter() {\r\n                                                    @Override\r\n                                                    public void onAnimationStart(Animator animation) {\r\n                                                        adapter.setImage(pos, cards.get(pos).getDisplay());\r\n                                                    }\r\n\r\n                                                    /**\r\n                                                     * game logic is here\r\n                                                     * @param animation\r\n                                                     */\r\n                                                    @Override\r\n                                                    public void onAnimationEnd(Animator animation) {\r\n                                                        selectedPos.add(pos);\r\n                                                        // 고른 카드 selectedPos vector에 add\r\n                                                        if (selectedPos.size() == 2) {\r\n                                                            // selectedPos vector 카드가 두장 쌓이면 비교 시작\r\n                                                            int pos1 = selectedPos.get(0);\r\n                                                            int pos2 = selectedPos.get(1);\r\n                                                            if(pos1 != pos2) { // 맞추려면 그 포지션이 달라야함\r\n                                                                String display = cards.get(pos1).getTag();\r\n                                                                String display2 = cards.get(pos2).getTag();\r\n                                                                Log.e(\"display1\", display);\r\n                                                                Log.e(\"display2\", display2);\r\n                                                                if (display.equals(display2)) {\r\n                                                                    Toast.makeText(MemoryGame.this, \"Correct!\", Toast.LENGTH_SHORT).show();\r\n                                                                    adapter.update(pos1, 2);\r\n                                                                    adapter.update(pos2, 2);\r\n                                                                    Log.e(\"Matched!\", display);\r\n                                                                    if (matchedAll(cards)) {\r\n                                                                        Log.e(\"In if statement\", \"yes!\");\r\n                                                                        timer.cancel();\r\n                                                                        stageUp();\r\n                                                                    }\r\n                                                                } else { // 틀림\r\n                                                                    adapter.update(pos1, 0);\r\n                                                                    adapter.update(pos2, 0);\r\n                                                                    Log.e(\"UnMatched..\", display);\r\n                                                                }\r\n                                                            } else { // 포지션 같으므로 pos1의 카드 check 초기화 (선택안한상태로 되돌림)\r\n                                                                adapter.update(pos1, 0);\r\n                                                            }\r\n                                                            selectedPos.removeAllElements(); // selectedPos vector 초기화\r\n                                                            selectedPos.clear();\r\n                                                        }\r\n                                                    }\r\n                                                })\r\n                                                .start();\r\n                                    }\r\n                                })\r\n                                .start();\r\n                    }\r\n                    break;\r\n            }\r\n\r\n\r\n            return false;\r\n        }\r\n\r\n        @Override\r\n        public void onTouchEvent(@NonNull RecyclerView recyclerView, @NonNull MotionEvent motionEvent) {\r\n            //no 구현\r\n        }\r\n\r\n        @Override\r\n        public void onRequestDisallowInterceptTouchEvent(boolean b) {\r\n            //no 구현\r\n        }\r\n    };\r\n\r\n\r\n    private boolean matchedAll(Vector<Card> cards) {\r\n        for (Card card : cards) {\r\n//            Log.e(\"passed the card\", card.getTag());\r\n//            Log.e(\"check value\", \"\" + card.getCheck());\r\n            if (card.getCheck() != 2) { // if a card is matched, the check value is 2\r\n//                Log.e(\"All matched?\", \"false\");\r\n                return false;\r\n            }\r\n        }\r\n//        Log.e(\"All matched?\", \"true\");\r\n        return true;\r\n    }\r\n\r\n    private void regame() {\r\n        for (Card card : cards) {\r\n            card.setCheck(0);\r\n        }\r\n        Collections.shuffle(cards);\r\n    }\r\n\r\n    private void start() {\r\n        Handler handler = new Handler();\r\n        handler.postDelayed(() -> {\r\n            // 정답 보여주기\r\n            if (stageLevel == 1) {\r\n                binding.cardViews.addOnItemTouchListener(onItemTouchListener);\r\n            }\r\n            adapter.setStartAnimate(true);\r\n            //첫시작할때 모두 뒤집기\r\n        }, getTimeDisplay()); // show answer for 10 secs\r\n        handler.postDelayed(this::timer, getTimeDisplay());\r\n    }\r\n\r\n    private void timer() {\r\n        binding.timerTxtView.setVisibility(View.VISIBLE);\r\n        //timer implement needed\r\n        //stage 1 2 3 will be initiated in here\r\n        timer = new Timer();\r\n        timer.schedule(tt, 0,100); // count 100 each 100ms\r\n    }\r\n\r\n    private void setTask() { // set TimerTake again 만약 다시 세팅을 안하면 팅김\r\n        tt = new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                Log.e(\"Counting Time\", String.valueOf(currTimer));\r\n                currTimer += 100;\r\n            }\r\n        };\r\n    }\r\n\r\n    public void stageUp() {\r\n        if (stageLevel == 1) {\r\n            stageLevel = 2;\r\n            Log.e(\"Curr time\", String.valueOf(currTimer));\r\n            recordTime += currTimer;\r\n        } else if (stageLevel == 2) {\r\n            stageLevel = 3;\r\n            Log.e(\"Curr time\", String.valueOf(currTimer));\r\n            recordTime += currTimer;\r\n\r\n        } else if (stageLevel == 3) {\r\n            gameState = GAME_DONE;\r\n            recordTime += currTimer;\r\n            currTimer = 0;\r\n            Log.e(\"Total recorded time\", String.valueOf(recordTime));\r\n            return ;\r\n        }\r\n        currTimer = 0;\r\n        setTask();\r\n        adapter.setStartAnimate(false);\r\n\r\n        regame();\r\n\r\n        binding.cardLayout.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {\r\n            @Override\r\n            public void onGlobalLayout() {\r\n                int width = binding.cardViews.getWidth() / 4 - 10;\r\n                int height = binding.cardViews.getHeight() / 4 - 10;\r\n                Log.e(\"width\", String.valueOf(width));\r\n                Log.e(\"height\", String.valueOf(height));\r\n                adapter.setLength(width, height);\r\n                // set length\r\n                adapter.notifyDataSetChanged();\r\n                // recycleView alert\r\n                Handler handler = new Handler();\r\n                handler.postDelayed(MemoryGame.this::start, 2000); // timer need to be implemented\r\n                binding.cardLayout.getViewTreeObserver().removeOnGlobalLayoutListener(this);\r\n            }\r\n        });\r\n    }\r\n\r\n    private void addCards() {\r\n        cards = new Vector<>();\r\n        cards.add(new Card(R.drawable.card_clubs1, \"1\"));\r\n        cards.add(new Card(R.drawable.card_clubs1, \"1\"));\r\n        cards.add(new Card(R.drawable.card_clubs2, \"2\"));\r\n        cards.add(new Card(R.drawable.card_clubs2, \"2\"));\r\n        cards.add(new Card(R.drawable.card_clubs3, \"3\"));\r\n        cards.add(new Card(R.drawable.card_clubs3, \"3\"));\r\n        cards.add(new Card(R.drawable.card_clubs4, \"4\"));\r\n        cards.add(new Card(R.drawable.card_clubs4, \"4\"));\r\n        cards.add(new Card(R.drawable.card_clubs5, \"5\"));\r\n        cards.add(new Card(R.drawable.card_clubs5, \"5\"));\r\n        cards.add(new Card(R.drawable.card_clubs6, \"6\"));\r\n        cards.add(new Card(R.drawable.card_clubs6, \"6\"));\r\n        cards.add(new Card(R.drawable.card_clubs7, \"7\"));\r\n        cards.add(new Card(R.drawable.card_clubs7, \"7\"));\r\n        cards.add(new Card(R.drawable.card_clubs8, \"8\"));\r\n        cards.add(new Card(R.drawable.card_clubs8, \"8\"));\r\n        boolean shuffle = false;\r\n        if (shuffle) {\r\n            Collections.shuffle(cards);\r\n        }\r\n    }\r\n\r\n    private long getTimeDisplay() {\r\n        if (stageLevel == 1) {\r\n            return TIME_DISPLAY_STAGE1;\r\n        } else if (stageLevel == 2) {\r\n            return TIME_DISPLAY_STAGE2;\r\n        } else if (stageLevel == 3) {\r\n            return TIME_DISPLAY_STAGE3;\r\n        } else {\r\n            return 0;\r\n        }\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/k_dev_master/memorygame/MemoryGame.java b/app/src/main/java/com/example/k_dev_master/memorygame/MemoryGame.java
---- a/app/src/main/java/com/example/k_dev_master/memorygame/MemoryGame.java	(revision b66973cbed0d8486f01ef7a518a44c7ced1dd3bd)
-+++ b/app/src/main/java/com/example/k_dev_master/memorygame/MemoryGame.java	(date 1656954491761)
-@@ -2,6 +2,7 @@
- 
- 
- import android.os.Bundle;
-+import android.os.CountDownTimer;
- import android.os.Handler;
- import android.util.Log;
- import android.view.ViewTreeObserver;
-@@ -9,6 +10,7 @@
- import android.animation.AnimatorListenerAdapter;
- import android.view.MotionEvent;
- import android.view.View;
-+import android.widget.TextView;
- import android.widget.Toast;
- 
- import androidx.annotation.NonNull;
-@@ -35,12 +37,14 @@
-     private int stageLevel = 0;
-     Vector<Card> cards;
-     Timer timer;
-+    private TextView textTimer;
-     private long recordTime = 0;
-     private long currTimer = 0;
-     private int gameState;
-     private static final int GAME_ONGOING = 0;
-     private static final int GAME_DONE = 1;
-     Vector<Integer> selectedPos;
-+    private TextView timerText;
-     // 골라 놓은 카드들 벡터로 저장
- 
-     // count 100ms
-@@ -63,7 +67,11 @@
-         stageLevel = 1;
-         setTask();
-         selectedPos = new Vector<>();
-+        //Timer
-+        timerText = (TextView) findViewById(R.id.timerTxtView);
-+
-         //비교할 후보들 저장
-+
-         addCards();
-         adapter.setUpPicture(cards);
-         binding.cardLayout.getViewTreeObserver().addOnGlobalLayoutListener(new ViewTreeObserver.OnGlobalLayoutListener() {
-@@ -78,13 +86,13 @@
-                 adapter.notifyDataSetChanged();
-                 // recycleView alert
-                 Handler handler = new Handler();
-+                //버튼 구현시 여기
-                 handler.postDelayed(MemoryGame.this::start, 100); // timer need to be implemented
-                 binding.cardLayout.getViewTreeObserver().removeOnGlobalLayoutListener(this);
-             }
-         });
-     }
- 
--
-     RecyclerView.OnItemTouchListener onItemTouchListener = new RecyclerView.OnItemTouchListener() {
-         @Override
-         public boolean onInterceptTouchEvent(@NonNull RecyclerView recyclerView, @NonNull MotionEvent evt) {
-@@ -221,20 +229,30 @@
-         //timer implement needed
-         //stage 1 2 3 will be initiated in here
-         timer = new Timer();
--        timer.schedule(tt, 0,100); // count 100 each 100ms
-+        timer.schedule(tt, 0,100); // count 100 each 10ms
-     }
- 
-     private void setTask() { // set TimerTake again 만약 다시 세팅을 안하면 팅김
-         tt = new TimerTask() {
-             @Override
--            public void run() {
--                Log.e("Counting Time", String.valueOf(currTimer));
--                currTimer += 100;
-+            public void run()
-+            {
-+                runOnUiThread(new Runnable()
-+                {
-+                    @Override
-+                    public void run()
-+                    {
-+                        Log.e("Counting Time", String.valueOf(currTimer));
-+                        currTimer += 1;
-+                        timerText.setText(getTimerText());
-+                    }
-+                });
-             }
-         };
-     }
- 
-     public void stageUp() {
-+        binding.timerTxtView.setVisibility(View.GONE);
-         if (stageLevel == 1) {
-             stageLevel = 2;
-             Log.e("Curr time", String.valueOf(currTimer));
-@@ -269,6 +287,7 @@
-                 adapter.notifyDataSetChanged();
-                 // recycleView alert
-                 Handler handler = new Handler();
-+                //ASK HERE
-                 handler.postDelayed(MemoryGame.this::start, 2000); // timer need to be implemented
-                 binding.cardLayout.getViewTreeObserver().removeOnGlobalLayoutListener(this);
-             }
-@@ -310,4 +329,19 @@
-             return 0;
-         }
-     }
-+
-+    private String getTimerText()
-+    {
-+        int rounded = (int) Math.round(currTimer);
-+
-+        long milliseconds = currTimer % 10;
-+        int seconds = rounded / 10;
-+
-+        return formatTime(milliseconds, seconds);
-+    }
-+
-+    private String formatTime(long milliseconds, int seconds)
-+    {
-+        return String.format("%02d",seconds) + "." + String.format("%01d",milliseconds);
-+    }
- }
-Index: app/src/main/res/layout/activity_memorygame.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<layout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    tools:context=\".findTheSamePicture.FindTheSamePictureActivity\"\r\n    android:background=\"@drawable/cardgame_background\">\r\n\r\n    <androidx.constraintlayout.widget.ConstraintLayout\r\n        android:id=\"@+id/cardLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n        <androidx.recyclerview.widget.RecyclerView\r\n            android:padding=\"8dp\"\r\n            android:id=\"@+id/cardViews\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintBottom_toBottomOf=\"parent\"\r\n            app:layout_constraintEnd_toEndOf=\"parent\"\r\n            app:layout_constraintDimensionRatio=\"1:1\"\r\n            android:overScrollMode=\"never\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"0dp\"/>\r\n\r\n        <TextView\r\n            android:visibility=\"gone\"\r\n            android:text=\"start\"\r\n            android:textStyle=\"bold\"\r\n            android:textSize=\"72sp\"\r\n            android:textColor=\"@android:color/black\"\r\n            android:gravity=\"center\"\r\n            android:id=\"@+id/startTxtView\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\"\r\n            app:layout_constraintDimensionRatio=\"1:1\"\r\n            android:layout_width=\"0dp\"\r\n            android:layout_height=\"0dp\" />\r\n\r\n        <TextView\r\n            android:id=\"@+id/timerTxtView\"\r\n            android:layout_width=\"48dp\"\r\n            android:layout_height=\"45dp\"\r\n            android:gravity=\"center\"\r\n            android:text=\"timer 00:00 draft\"\r\n            android:textColor=\"@android:color/black\"\r\n            android:textSize=\"25sp\"\r\n            android:textStyle=\"bold\"\r\n            android:visibility=\"gone\"\r\n            app:layout_constraintStart_toStartOf=\"parent\"\r\n            app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n\r\n        <!--        <TextView-->\r\n<!--            android:visibility=\"gone\"-->\r\n<!--            android:text=\"start\"-->\r\n<!--            android:textStyle=\"bold\"-->\r\n<!--            android:textSize=\"72sp\"-->\r\n<!--            android:textColor=\"@android:color/black\"-->\r\n<!--            android:gravity=\"center\"-->\r\n<!--            android:id=\"@+id/startTxtView\"-->\r\n<!--            app:layout_constraintStart_toStartOf=\"parent\"-->\r\n<!--            app:layout_constraintTop_toTopOf=\"parent\"-->\r\n<!--            app:layout_constraintEnd_toStartOf=\"@+id/pictureViews\"-->\r\n<!--            app:layout_constraintDimensionRatio=\"1:1\"-->\r\n<!--            android:layout_width=\"0dp\"-->\r\n<!--            android:layout_height=\"0dp\" />-->\r\n\r\n<!--        <TextView-->\r\n<!--            android:visibility=\"gone\"-->\r\n<!--            android:text=\"1\"-->\r\n<!--            android:textStyle=\"bold\"-->\r\n<!--            android:textSize=\"72sp\"-->\r\n<!--            android:textColor=\"@android:color/black\"-->\r\n<!--            android:gravity=\"center\"-->\r\n<!--            android:id=\"@+id/count1TxtView\"-->\r\n<!--            app:layout_constraintStart_toStartOf=\"parent\"-->\r\n<!--            app:layout_constraintBottom_toBottomOf=\"parent\"-->\r\n<!--            app:layout_constraintEnd_toStartOf=\"@+id/pictureViews\"-->\r\n<!--            app:layout_constraintDimensionRatio=\"1:1\"-->\r\n<!--            android:layout_width=\"0dp\"-->\r\n<!--            android:layout_height=\"0dp\" />-->\r\n\r\n<!--        <TextView-->\r\n<!--            android:visibility=\"gone\"-->\r\n<!--            android:text=\"3\"-->\r\n<!--            android:textStyle=\"bold\"-->\r\n<!--            android:textSize=\"72sp\"-->\r\n<!--            android:textColor=\"@android:color/black\"-->\r\n<!--            android:gravity=\"center\"-->\r\n<!--            android:id=\"@+id/count3TxtView\"-->\r\n<!--            app:layout_constraintEnd_toEndOf=\"parent\"-->\r\n<!--            app:layout_constraintTop_toTopOf=\"parent\"-->\r\n<!--            app:layout_constraintStart_toEndOf=\"@+id/pictureViews\"-->\r\n<!--            app:layout_constraintDimensionRatio=\"1:1\"-->\r\n<!--            android:layout_width=\"0dp\"-->\r\n<!--            android:layout_height=\"0dp\" />-->\r\n\r\n<!--        <TextView-->\r\n<!--            android:visibility=\"gone\"-->\r\n<!--            android:text=\"2\"-->\r\n<!--            android:textStyle=\"bold\"-->\r\n<!--            android:textSize=\"72sp\"-->\r\n<!--            android:textColor=\"@android:color/black\"-->\r\n<!--            android:gravity=\"center\"-->\r\n<!--            android:id=\"@+id/count2TxtView\"-->\r\n<!--            app:layout_constraintEnd_toEndOf=\"parent\"-->\r\n<!--            app:layout_constraintBottom_toBottomOf=\"parent\"-->\r\n<!--            app:layout_constraintStart_toEndOf=\"@+id/pictureViews\"-->\r\n<!--            app:layout_constraintDimensionRatio=\"1:1\"-->\r\n<!--            android:layout_width=\"0dp\"-->\r\n<!--            android:layout_height=\"0dp\" />-->\r\n\r\n<!--        <Button-->\r\n<!--            android:id=\"@+id/restartBtn\"-->\r\n<!--            app:layout_constraintStart_toStartOf=\"parent\"-->\r\n<!--            app:layout_constraintEnd_toStartOf=\"@id/pictureViews\"-->\r\n<!--            app:layout_constraintTop_toTopOf=\"parent\"-->\r\n<!--            app:layout_constraintBottom_toBottomOf=\"parent\"-->\r\n<!--            android:layout_width=\"0dp\"-->\r\n<!--            android:text=\"RESET\"-->\r\n<!--            android:textSize=\"48sp\"-->\r\n<!--            android:textStyle=\"bold\"-->\r\n<!--            android:layout_height=\"wrap_content\" />-->\r\n    </androidx.constraintlayout.widget.ConstraintLayout>\r\n</layout>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/res/layout/activity_memorygame.xml b/app/src/main/res/layout/activity_memorygame.xml
---- a/app/src/main/res/layout/activity_memorygame.xml	(revision b66973cbed0d8486f01ef7a518a44c7ced1dd3bd)
-+++ b/app/src/main/res/layout/activity_memorygame.xml	(date 1656954334473)
-@@ -5,6 +5,7 @@
-     tools:context=".findTheSamePicture.FindTheSamePictureActivity"
-     android:background="@drawable/cardgame_background">
- 
-+
-     <androidx.constraintlayout.widget.ConstraintLayout
-         android:id="@+id/cardLayout"
-         android:layout_width="match_parent"
-@@ -17,6 +18,7 @@
-             app:layout_constraintBottom_toBottomOf="parent"
-             app:layout_constraintEnd_toEndOf="parent"
-             app:layout_constraintDimensionRatio="1:1"
-+            app:layout_constraintVertical_bias="0.8"
-             android:overScrollMode="never"
-             android:layout_width="0dp"
-             android:layout_height="0dp"/>
-@@ -37,16 +39,18 @@
- 
-         <TextView
-             android:id="@+id/timerTxtView"
--            android:layout_width="48dp"
-+            android:layout_width="wrap_content"
-             android:layout_height="45dp"
-             android:gravity="center"
--            android:text="timer 00:00 draft"
-+            android:text=""
-             android:textColor="@android:color/black"
-             android:textSize="25sp"
-             android:textStyle="bold"
-             android:visibility="gone"
--            app:layout_constraintStart_toStartOf="parent"
--            app:layout_constraintTop_toTopOf="parent" />
-+            android:layout_marginTop="100dp"
-+            app:layout_constraintLeft_toLeftOf="parent"
-+            app:layout_constraintRight_toRightOf="parent"
-+            app:layout_constraintTop_toTopOf="parent"/>
- 
- 
-         <!--        <TextView-->
-Index: .idea/deploymentTargetDropDown.xml
-===================================================================
-diff --git a/.idea/deploymentTargetDropDown.xml b/.idea/deploymentTargetDropDown.xml
-deleted file mode 100644
---- a/.idea/deploymentTargetDropDown.xml	(revision b66973cbed0d8486f01ef7a518a44c7ced1dd3bd)
-+++ /dev/null	(revision b66973cbed0d8486f01ef7a518a44c7ced1dd3bd)
-@@ -1,17 +0,0 @@
--<?xml version="1.0" encoding="UTF-8"?>
--<project version="4">
--  <component name="deploymentTargetDropDown">
--    <targetSelectedWithDropDown>
--      <Target>
--        <type value="QUICK_BOOT_TARGET" />
--        <deviceKey>
--          <Key>
--            <type value="VIRTUAL_DEVICE_PATH" />
--            <value value="$USER_HOME$/.android/avd/Pixel_3a_API_32_arm64-v8a.avd" />
--          </Key>
--        </deviceKey>
--      </Target>
--    </targetSelectedWithDropDown>
--    <timeTargetWasSelectedWithDropDown value="2022-05-27T21:22:17.532114Z" />
--  </component>
--</project>
-\ No newline at end of file
-Index: .idea/.gitignore
-===================================================================
-diff --git a/.idea/.gitignore b/.idea/.gitignore
-deleted file mode 100644
---- a/.idea/.gitignore	(revision b66973cbed0d8486f01ef7a518a44c7ced1dd3bd)
-+++ /dev/null	(revision b66973cbed0d8486f01ef7a518a44c7ced1dd3bd)
-@@ -1,3 +0,0 @@
--# Default ignored files
--/shelf/
--/workspace.xml
-Index: app/build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>plugins {\r\n    id 'com.android.application'\r\n}\r\n\r\nandroid {\r\n    compileSdk 32\r\n    defaultConfig {\r\n        applicationId \"com.example.k_dev_master\"\r\n        minSdk 21\r\n        targetSdk 32\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n\r\n    viewBinding{\r\n        enabled = true\r\n    }\r\n\r\n    buildFeatures{\r\n        dataBinding = true\r\n    }\r\n}\r\ndependencies {\r\n    implementation \"androidx.appcompat:appcompat:1.4.1\"\r\n    implementation 'com.google.android.material:material:1.6.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation fileTree(dir: 'libs', include: ['*.jar'])\r\n    implementation \"androidx.recyclerview:recyclerview:1.2.1\"\r\n    implementation 'com.android.support.constraint:constraint-layout:1.1.3'\r\n    implementation 'androidx.databinding:databinding-runtime:4.2.2'\r\n    implementation 'com.android.support:design:28.0.0'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n\r\n    //slide view\r\n    implementation 'androidx.viewpager2:viewpager2:1.0.0'\r\n    //implementation 'me.relex:circleindicator:2.1.4'\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/build.gradle b/app/build.gradle
---- a/app/build.gradle	(revision b66973cbed0d8486f01ef7a518a44c7ced1dd3bd)
-+++ b/app/build.gradle	(date 1656945750842)
-@@ -1,5 +1,7 @@
- plugins {
-     id 'com.android.application'
-+    id 'org.jetbrains.kotlin.android'
-+    id 'org.jetbrains.kotlin.kapt'
- }
- 
- android {
-@@ -26,12 +28,9 @@
-         targetCompatibility JavaVersion.VERSION_1_8
-     }
- 
--    viewBinding{
--        enabled = true
--    }
--
-     buildFeatures{
--        dataBinding = true
-+        dataBinding true
-+        viewBinding true
-     }
- }
- dependencies {
-@@ -46,6 +45,9 @@
-     testImplementation 'junit:junit:4.13.2'
-     androidTestImplementation 'androidx.test.ext:junit:1.1.3'
-     androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
-+    kapt "com.android.databinding:compiler:3.0.1"
-+
-+
- 
-     //slide view
-     implementation 'androidx.viewpager2:viewpager2:1.0.0'
-Index: app/src/main/java/com/example/k_dev_master/game2048/LogicGame2048.java
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.k_dev_master.game2048;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.CountDownTimer;\r\nimport android.view.Gravity;\r\n\r\nimport android.view.LayoutInflater;\r\nimport android.view.MenuItem;\r\nimport android.view.MotionEvent;\r\nimport android.view.View;\r\nimport android.widget.ImageButton;\r\nimport android.widget.LinearLayout;\r\nimport android.widget.PopupMenu;\r\nimport android.widget.PopupWindow;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.k_dev_master.MainActivity;\r\nimport com.example.k_dev_master.R;\r\n\r\npublic class LogicGame2048 extends AppCompatActivity {\r\n    // 2048 Game\r\n    private MainView2048 view;\r\n    //Timer Change 1\r\n    private TextView textTimer;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        view = new MainView2048(this);\r\n        setContentView(R.layout.activity_main_2048game);\r\n        ImageButton openMenu = findViewById(R.id.ListViewBtn2048);\r\n        //Timer Change 2\r\n        textTimer = (TextView) findViewById(R.id.timerText);\r\n        new CountDownTimer(60000, 100) {\r\n\r\n            public void onTick(long millisUntilFinished) {\r\n                textTimer.setText(\"Seconds remaining: \" + millisUntilFinished / 1000 + \".\"\r\n                        + millisUntilFinished % 100);\r\n            }\r\n\r\n            public void onFinish() {\r\n                textTimer.setText(\"done!\");\r\n            }\r\n        }.start();\r\n        openMenu.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n\r\n                PopupMenu popupMenu = new PopupMenu(LogicGame2048.this, view);\r\n                popupMenu.getMenuInflater().inflate(R.menu.popup_2048, popupMenu.getMenu());\r\n                popupMenu.setOnMenuItemClickListener(new PopupMenu.OnMenuItemClickListener() {\r\n                    @Override\r\n                    public boolean onMenuItemClick(MenuItem item) {\r\n                        switch (item.getItemId()) {\r\n                            case R.id.pop_2048:\r\n                                startActivity(new Intent(getApplicationContext(), LogicGame2048.class));\r\n                                break;\r\n                            case R.id.pop_2048_inst:\r\n                                LayoutInflater inflater = (LayoutInflater)\r\n                                        getSystemService(LAYOUT_INFLATER_SERVICE);\r\n                                View popupView = inflater.inflate(R.layout.popup_instruction_2048, null);\r\n\r\n                                int width = LinearLayout.LayoutParams.WRAP_CONTENT;\r\n                                int height = LinearLayout.LayoutParams.WRAP_CONTENT;\r\n                                boolean focusable = true; // lets taps outside the popup also dismiss it\r\n                                final PopupWindow popupWindow = new PopupWindow(popupView, width, height, focusable);\r\n\r\n                                // show the popup window\r\n                                // which view you pass in doesn't matter, it is only used for the window tolken\r\n                                popupWindow.showAtLocation(view, Gravity.CENTER, 0, 0);\r\n\r\n                                // dismiss the popup window when touched\r\n                                popupView.setOnTouchListener(new View.OnTouchListener() {\r\n                                    @Override\r\n                                    public boolean onTouch(View v, MotionEvent event) {\r\n                                        popupWindow.dismiss();\r\n                                        return true;\r\n                                    }\r\n                                });\r\n                                break;\r\n                            case R.id.pop_2048_exit:\r\n                                startActivity(new Intent(getApplicationContext(), MainActivity.class));\r\n                                finish();\r\n                                break;\r\n                            default:\r\n                        }\r\n                        return false;\r\n                    }\r\n                });\r\n                popupMenu.show();\r\n            }\r\n        });\r\n    }\r\n}\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/k_dev_master/game2048/LogicGame2048.java b/app/src/main/java/com/example/k_dev_master/game2048/LogicGame2048.java
---- a/app/src/main/java/com/example/k_dev_master/game2048/LogicGame2048.java	(revision b66973cbed0d8486f01ef7a518a44c7ced1dd3bd)
-+++ b/app/src/main/java/com/example/k_dev_master/game2048/LogicGame2048.java	(date 1656944328602)
-@@ -23,8 +23,7 @@
- public class LogicGame2048 extends AppCompatActivity {
-     // 2048 Game
-     private MainView2048 view;
--    //Timer Change 1
--    private TextView textTimer;
-+
- 
-     @Override
-     protected void onCreate(Bundle savedInstanceState) {
-@@ -32,19 +31,6 @@
-         view = new MainView2048(this);
-         setContentView(R.layout.activity_main_2048game);
-         ImageButton openMenu = findViewById(R.id.ListViewBtn2048);
--        //Timer Change 2
--        textTimer = (TextView) findViewById(R.id.timerText);
--        new CountDownTimer(60000, 100) {
--
--            public void onTick(long millisUntilFinished) {
--                textTimer.setText("Seconds remaining: " + millisUntilFinished / 1000 + "."
--                        + millisUntilFinished % 100);
--            }
--
--            public void onFinish() {
--                textTimer.setText("done!");
--            }
--        }.start();
-         openMenu.setOnClickListener(new View.OnClickListener() {
-             @Override
-             public void onClick(View view) {
-Index: build.gradle
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>// Top-level build file where you can add configuration options common to all sub-projects/modules.\r\nplugins {\r\n    id 'com.android.application' version '7.2.0' apply false\r\n    id 'com.android.library' version '7.2.0' apply false\r\n}\r\n\r\n\r\ntask clean(type: Delete) {\r\n    delete rootProject.buildDir\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/build.gradle b/build.gradle
---- a/build.gradle	(revision b66973cbed0d8486f01ef7a518a44c7ced1dd3bd)
-+++ b/build.gradle	(date 1656945690495)
-@@ -1,10 +1,18 @@
- // Top-level build file where you can add configuration options common to all sub-projects/modules.
-+buildscript {
-+    dependencies {
-+        classpath "com.android.tools.build:gradle:3.1.3"
-+        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.7.0"
-+    }
-+}
-+
- plugins {
-     id 'com.android.application' version '7.2.0' apply false
-     id 'com.android.library' version '7.2.0' apply false
- }
- 
- 
-+
- task clean(type: Delete) {
-     delete rootProject.buildDir
- }
-\ No newline at end of file
-Index: .idea/misc.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"DesignSurface\">\r\n    <option name=\"filePathToZoomLevelMap\">\r\n      <map>\r\n        <entry key=\"app/src/main/res/layout/activity_main_2048game.xml\" value=\"0.1\" />\r\n        <entry key=\"app/src/main/res/layout/activity_memorygame.xml\" value=\"0.25625\" />\r\n        <entry key=\"app/src/main/res/layout/frame_1.xml\" value=\"0.16394927536231885\" />\r\n        <entry key=\"app/src/main/res/layout/frame_2.xml\" value=\"0.16394927536231885\" />\r\n        <entry key=\"app/src/main/res/layout/frame_3.xml\" value=\"0.16394927536231885\" />\r\n        <entry key=\"app/src/main/res/layout/game_2048.xml\" value=\"0.1703125\" />\r\n        <entry key=\"app/src/main/res/layout/item_card.xml\" value=\"0.16394927536231885\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_11\" default=\"true\" project-jdk-name=\"Android API 32 Platform\" project-jdk-type=\"Android SDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/misc.xml b/.idea/misc.xml
---- a/.idea/misc.xml	(revision b66973cbed0d8486f01ef7a518a44c7ced1dd3bd)
-+++ b/.idea/misc.xml	(date 1656948654562)
-@@ -3,18 +3,14 @@
-   <component name="DesignSurface">
-     <option name="filePathToZoomLevelMap">
-       <map>
--        <entry key="app/src/main/res/layout/activity_main_2048game.xml" value="0.1" />
--        <entry key="app/src/main/res/layout/activity_memorygame.xml" value="0.25625" />
--        <entry key="app/src/main/res/layout/frame_1.xml" value="0.16394927536231885" />
--        <entry key="app/src/main/res/layout/frame_2.xml" value="0.16394927536231885" />
--        <entry key="app/src/main/res/layout/frame_3.xml" value="0.16394927536231885" />
--        <entry key="app/src/main/res/layout/game_2048.xml" value="0.1703125" />
--        <entry key="app/src/main/res/layout/item_card.xml" value="0.16394927536231885" />
-+        <entry key="..\:/GitHub/K-Dev/app/src/main/res/layout/activity_memorygame.xml" value="0.22" />
-       </map>
-     </option>
-   </component>
--  <component name="ExternalStorageConfigurationManager" enabled="true" />
--  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android API 32 Platform" project-jdk-type="Android SDK">
--    <output url="file://$PROJECT_DIR$/out" />
-+  <component name="ProjectRootManager" version="2" languageLevel="JDK_11" default="true" project-jdk-name="Android Studio default JDK" project-jdk-type="JavaSDK">
-+    <output url="file://$PROJECT_DIR$/build/classes" />
-+  </component>
-+  <component name="ProjectType">
-+    <option name="id" value="Android" />
-   </component>
- </project>
-\ No newline at end of file
-Index: .idea/gradle.xml
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"GradleMigrationSettings\" migrationVersion=\"1\" />\r\n  <component name=\"GradleSettings\">\r\n    <option name=\"linkedExternalProjectsSettings\">\r\n      <GradleProjectSettings>\r\n        <option name=\"testRunner\" value=\"GRADLE\" />\r\n        <option name=\"distributionType\" value=\"DEFAULT_WRAPPED\" />\r\n        <option name=\"externalProjectPath\" value=\"$PROJECT_DIR$\" />\r\n        <option name=\"modules\">\r\n          <set>\r\n            <option value=\"$PROJECT_DIR$\" />\r\n            <option value=\"$PROJECT_DIR$/app\" />\r\n          </set>\r\n        </option>\r\n      </GradleProjectSettings>\r\n    </option>\r\n  </component>\r\n</project>
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/.idea/gradle.xml b/.idea/gradle.xml
---- a/.idea/gradle.xml	(revision b66973cbed0d8486f01ef7a518a44c7ced1dd3bd)
-+++ b/.idea/gradle.xml	(date 1656945406064)
-@@ -1,6 +1,5 @@
- <?xml version="1.0" encoding="UTF-8"?>
- <project version="4">
--  <component name="GradleMigrationSettings" migrationVersion="1" />
-   <component name="GradleSettings">
-     <option name="linkedExternalProjectsSettings">
-       <GradleProjectSettings>
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-07-04__1_41__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-07-04__1_41__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-07-04__1_41__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-07-04__1_41__Changes_.xml	(revision 1ad42df3e189c2ea6886c4fc83074d4ca4983bf4)
+++ /dev/null	(revision 1ad42df3e189c2ea6886c4fc83074d4ca4983bf4)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2022-07-04_오후_1_41_[Changes]" date="1656956570385" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022-07-04_오후_1_41_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2022-07-04 오후 1:41 [Changes]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/java/com/example/k_dev_master/gomoku/BoardGameGomoku.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/k_dev_master/gomoku/BoardGameGomoku.java b/app/src/main/java/com/example/k_dev_master/gomoku/BoardGameGomoku.java
new file mode 100644
--- /dev/null	(date 1657837260583)
+++ b/app/src/main/java/com/example/k_dev_master/gomoku/BoardGameGomoku.java	(date 1657837260583)
@@ -0,0 +1,179 @@
+package com.example.k_dev_master.gomoku;
+
+import android.os.Bundle;
+
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+
+public class BoardGameGomoku extends AppCompatActivity {
+
+    private Stone.Color turn;
+    private Board board;
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        board = new Board(19, 19);
+        
+        //TODO
+        //돌 놓는것, GUI & Algorithm
+        //보드 업데이트
+        //Android Manifest 연동해서 Suite에서 실행시키기
+    }
+
+    private void changeTurn() {
+        if (turn == Stone.Color.BLACK) {turn = Stone.Color.WHITE;}
+        else {turn = Stone.Color.BLACK;}
+    }
+
+    //마지막에 놓은 돌 기준 5개 확인
+    private boolean checkWin(Stone stone) {
+        return checkWinLU(stone) || checkWinU(stone) || checkWinRU(stone) || checkWinR(stone)
+                || checkWinRD(stone) || checkWinD(stone) || checkWinLD(stone) || checkWinL(stone);
+    }
+
+    private boolean checkWinLU(Stone stone) {
+        int total;
+        //왼위확인
+        try {
+            total = 0;
+            for (int i = 0; i < 5; i++) {
+                if (board.getStone(stone.getX() - i, stone.getY() - i).getColor() == stone.getColor()) {
+                    total++;
+                }
+            }
+            return total == 5;
+        } catch (ArrayIndexOutOfBoundsException e) {
+            return false;
+        } catch (NullPointerException e) {
+            return false;
+        }
+    }
+
+    private boolean checkWinU(Stone stone) {
+        int total;
+        //위확인
+        try {
+            total = 0;
+            for (int i = 0; i < 5; i++) {
+                if (board.getStone(stone.getX(), stone.getY() - i).getColor() == stone.getColor()) {
+                    total++;
+                }
+            }
+            return total == 5;
+        } catch (ArrayIndexOutOfBoundsException e) {
+            return false;
+        } catch (NullPointerException e) {
+            return false;
+        }
+    }
+
+    private boolean checkWinRU(Stone stone) {
+        int total;
+        //오위확인
+        try {
+            total = 0;
+            for (int i = 0; i < 5; i++) {
+                if (board.getStone(stone.getX() + i, stone.getY() - i).getColor() == stone.getColor()) {
+                    total++;
+                }
+            }
+            return total == 5;
+        } catch (ArrayIndexOutOfBoundsException e) {
+            return false;
+        } catch (NullPointerException e) {
+            return false;
+        }
+    }
+
+    private boolean checkWinR(Stone stone) {
+        int total;
+        //오확인
+        try {
+            total = 0;
+            for (int i = 0; i < 5; i++) {
+                if (board.getStone(stone.getX() + i, stone.getY()).getColor() == stone.getColor()) {
+                    total++;
+                }
+            }
+            return total == 5;
+        } catch (ArrayIndexOutOfBoundsException e) {
+            return false;
+        } catch (NullPointerException e) {
+            return false;
+        }
+    }
+
+    private boolean checkWinRD(Stone stone) {
+        int total;
+        //오밑확인
+        try {
+            total = 0;
+            for (int i = 0; i < 5; i++) {
+                if (board.getStone(stone.getX() + i, stone.getY() + i).getColor() == stone.getColor()) {
+                    total++;
+                }
+            }
+            return total == 5;
+        } catch (ArrayIndexOutOfBoundsException e) {
+            return false;
+        } catch (NullPointerException e) {
+            return false;
+        }
+    }
+
+    private boolean checkWinD(Stone stone) {
+        int total;
+        //밑확인
+        try {
+            total = 0;
+            for (int i = 0; i < 5; i++) {
+                if (board.getStone(stone.getX(), stone.getY() + i).getColor() == stone.getColor()) {
+                    total++;
+                }
+            }
+            return total == 5;
+        } catch (ArrayIndexOutOfBoundsException e) {
+            return false;
+        } catch (NullPointerException e) {
+            return false;
+        }
+    }
+
+    private boolean checkWinLD(Stone stone) {
+        int total;
+        //왼밑확인
+        try {
+            total = 0;
+            for (int i = 0; i < 5; i++) {
+                if (board.getStone(stone.getX() - i, stone.getY() + i).getColor() == stone.getColor()) {
+                    total++;
+                }
+            }
+            return total == 5;
+        } catch (ArrayIndexOutOfBoundsException e) {
+            return false;
+        } catch (NullPointerException e) {
+            return false;
+        }
+    }
+
+    private boolean checkWinL(Stone stone) {
+        int total;
+        //왼확인
+        try {
+            total = 0;
+            for (int i = 0; i < 5; i++) {
+                if (board.getStone(stone.getX() - i, stone.getY()).getColor() == stone.getColor()) {
+                    total++;
+                }
+            }
+            return total == 5;
+        } catch (ArrayIndexOutOfBoundsException e) {
+            return false;
+        } catch (NullPointerException e) {
+            return false;
+        }
+    }
+}
Index: app/src/main/java/com/example/k_dev_master/gomoku/Board.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/k_dev_master/gomoku/Board.java b/app/src/main/java/com/example/k_dev_master/gomoku/Board.java
new file mode 100644
--- /dev/null	(date 1657821773138)
+++ b/app/src/main/java/com/example/k_dev_master/gomoku/Board.java	(date 1657821773138)
@@ -0,0 +1,48 @@
+package com.example.k_dev_master.gomoku;
+
+import java.util.ArrayList;
+
+public class Board {
+    public Stone[][] field;
+    private int sizeX;
+    private int sizeY;
+    private int noStones;
+
+    public Board(int sizeX, int sizeY) {
+        this.field = new Stone[sizeX][sizeY];
+        this.sizeX = sizeX;
+        this.sizeY = sizeY;
+        noStones = 0;
+    }
+
+    public boolean isStoneOccupied(Stone stone) {
+        return (getStone(stone) != null);
+    }
+
+    public Stone getStone(Stone stone) {
+        if (stone != null) {
+            return field[stone.getX()][stone.getY()];
+        } else {
+            return null;
+        }
+    }
+
+    public Stone getStone(int x, int y) {
+        return field[x][y];
+    }
+
+    public void insertStone(Stone stone) {
+        field[stone.getX()][stone.getY()] = stone;
+        noStones++;
+    }
+
+    public boolean isBoardFull() {
+        if (noStones >= field.length * field[0].length) {return true;}
+        return false;
+    }
+
+    public void clearBoard() {
+        this.field = new Stone[sizeX][sizeY];
+        noStones = 0;
+    }
+}
Index: app/src/main/java/com/example/k_dev_master/gomoku/Stone.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/k_dev_master/gomoku/Stone.java b/app/src/main/java/com/example/k_dev_master/gomoku/Stone.java
new file mode 100644
--- /dev/null	(date 1657836162715)
+++ b/app/src/main/java/com/example/k_dev_master/gomoku/Stone.java	(date 1657836162715)
@@ -0,0 +1,64 @@
+package com.example.k_dev_master.gomoku;
+
+public class Stone {
+    //x,y is for array
+    private int x;
+    private int y;
+    //coordinatex, y is for drawing bitmap
+    private int coordinateX;
+    private int coordinateY;
+    private Color color;
+
+    enum Color {
+        BLACK,
+        WHITE
+    }
+
+    public Stone(int x, int y, int coordinateX, int coordinateY, Color c) {
+        this.x = x;
+        this.y = y;
+        this.coordinateX = coordinateX;
+        this.coordinateY = coordinateY;
+        this.color = c;
+    }
+
+    public int getX() {
+        return x;
+    }
+
+    public int getY() {
+        return y;
+    }
+
+    public int getCoordinateX() {
+        return coordinateX;
+    }
+
+    public int getCoordinateY() {
+        return coordinateY;
+    }
+
+    public Color getColor() {
+        return color;
+    }
+
+    public void setX(int x) {
+        this.x = x;
+    }
+
+    public void setY(int y) {
+        this.y = y;
+    }
+
+    public void setCoordinateX(int coordinateX) {
+        this.coordinateX = coordinateX;
+    }
+
+    public void setCoordinateY(int coordinateY) {
+        this.coordinateY = coordinateY;
+    }
+
+    public void setColor(Color color) {
+        this.color = color;
+    }
+}
